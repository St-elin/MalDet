{"ast":null,"code":"var _jsxFileName = \"/home/cuckoo/MalDet/maldet-frontend/maldet-frontend/src/pages/AnalysisPage.jsx\";\nimport React from 'react';\nimport * as requests from '../requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AnalysisPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      analyze_mode: 'mode2',\n      fileToUpload: undefined,\n      isFileUploaded: false,\n      analysisResult: undefined\n    };\n\n    this.onModeChange = e => this.setState({\n      analyze_mode: e.target.value\n    });\n\n    this.handleFileUpload = e => this.setState({\n      fileToUpload: e.target.files[0]\n    });\n\n    this.onUploadButtonClick = () => {\n      const isFileUploadedCallback = result => {\n        console.log('result', result);\n        this.setState({\n          analysisResult: result\n        });\n      };\n\n      const formData = new FormData();\n      formData.append('file', this.state.fileToUpload);\n      requests.uploadFile(this.state.analyze_mode, this.state.fileToUpload, formData, isFileUploadedCallback);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyze\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"mode1\",\n            onChange: this.onModeChange,\n            checked: this.state.analyze_mode === 'mode1'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"mode2\",\n            onChange: this.onModeChange,\n            checked: this.state.analyze_mode === 'mode2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0414\\u0438\\u043D\\u0430\\u043C\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 \\u0430\\u043D\\u0430\\u043B\\u0438\\u0437\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyze__upload-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analyze__upload-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => this.refs.fileInput.click(),\n            children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: \"fileInput\",\n            onChange: this.handleFileUpload,\n            type: \"file\",\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: this.onUploadButtonClick,\n            disabled: this.state.fileToUpload === undefined,\n            children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analyze__upload-filename\",\n          children: this.state.fileToUpload !== undefined && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: ['Файл ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'blue'\n              },\n              children: this.state.fileToUpload.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), this.state.analysisResult !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyze__body\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(this.state.analysisResult, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default AnalysisPage;","map":{"version":3,"sources":["/home/cuckoo/MalDet/maldet-frontend/maldet-frontend/src/pages/AnalysisPage.jsx"],"names":["React","requests","AnalysisPage","Component","state","analyze_mode","fileToUpload","undefined","isFileUploaded","analysisResult","onModeChange","e","setState","target","value","handleFileUpload","files","onUploadButtonClick","isFileUploadedCallback","result","console","log","formData","FormData","append","uploadFile","render","refs","fileInput","click","display","color","name","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport * as requests from '../requests';\n\n\nclass AnalysisPage extends React.Component {\n    state = {\n        analyze_mode: 'mode2',\n        fileToUpload: undefined,\n        isFileUploaded: false,\n        analysisResult: undefined,\n    };\n\n    onModeChange     = (e) => this.setState({ analyze_mode: e.target.value });\n    handleFileUpload = (e) => this.setState({ fileToUpload: e.target.files[0] });\n\n    onUploadButtonClick = () => {\n        const isFileUploadedCallback = (result) => {\n            console.log('result', result)\n            this.setState({ analysisResult: result });\n        }\n\n        const formData = new FormData();\n        formData.append('file', this.state.fileToUpload);\n\n        requests.uploadFile(\n            this.state.analyze_mode,\n            this.state.fileToUpload,\n            formData,\n            isFileUploadedCallback\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"analyze\">\n                <div className=\"radio-group\">\n                    <div className=\"radio\">\n                        <input\n                            type=\"radio\"\n                            value='mode1'\n                            onChange={this.onModeChange}\n                            checked={this.state.analyze_mode === 'mode1'}\n                        />\n                        <span>Статический анализ</span>\n                    </div>\n                    <div className=\"radio\">\n                        <input\n                            type=\"radio\"\n                            value='mode2'\n                            onChange={this.onModeChange}\n                            checked={this.state.analyze_mode === 'mode2'}\n                        />\n                        <span>Динамический анализ</span>\n                    </div>\n                </div>\n\n                <div className=\"analyze__upload-block\">\n                    <div className=\"analyze__upload-buttons\">\n                        <button\n                            className='btn'\n                            onClick={() => this.refs.fileInput.click()}\n                        >\n                            Выбрать файл\n                        </button>\n                        <input\n                            ref=\"fileInput\"\n                            onChange={this.handleFileUpload}\n                            type=\"file\"\n                            style={{ display: \"none\" }}\n                        />\n\n                        <button\n                            className=\"btn\"\n                            onClick={this.onUploadButtonClick}\n                            disabled={this.state.fileToUpload === undefined}\n                        >\n                            Анализировать\n                        </button>\n                    </div>\n                    <div className=\"analyze__upload-filename\">\n                        {this.state.fileToUpload !== undefined && (\n                            <React.Fragment>\n                                {'Файл '}\n                                <span style={{ color: 'blue' }}>\n                                    {this.state.fileToUpload.name}\n                                </span>\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n\n                {this.state.analysisResult !== undefined && (\n                    <div className=\"analyze__body\">\n                        <pre>\n                            {JSON.stringify(this.state.analysisResult, null, 2)}\n                        </pre>\n                    </div>\n                )}\n            </div>\n        );\n    }\n};\n\nexport default AnalysisPage;"]},"metadata":{},"sourceType":"module"}