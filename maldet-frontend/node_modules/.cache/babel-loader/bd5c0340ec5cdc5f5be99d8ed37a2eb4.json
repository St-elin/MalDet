{"ast":null,"code":"import * as axios from 'axios';\n\nconst FileDownload = require('js-file-download');\n\nconst baseUrl = 'http://0.0.0.0:8003';\nexport const searchData = async (data, callback) => {\n  const search_mode = data.search_mode;\n  const url = search_mode === 'hash' || search_mode === 'dynamic_search' ? baseUrl + '/search/' + data.input_data : baseUrl + '/search/' + data.search_mode;\n\n  if (search_mode === 'hash') {\n    axios(url, {\n      method: 'GET',\n      headers: {\n        'dynamic_search': ''\n      }\n    }).then(resp => callback(resp.json())).catch(err => callback(err));\n  } else if (search_mode === 'date') {\n    axios(url, {\n      method: 'GET',\n      headers: {\n        'dynamic_search': '',\n        \"date\": data.input_data\n      }\n    }).then(resp => callback(resp.json())).catch(err => callback(err));\n  } else if (search_mode === 'search_ip') {\n    axios(url, {\n      method: 'GET',\n      headers: {\n        'dynamic_search': '',\n        'search_ip': ''\n      }\n    }).then(resp => callback(resp.json())).catch(err => callback(err));\n  } // done\n  else if (search_mode === 'dynamic_search') {\n      axios(url, {\n        method: 'GET',\n        headers: {\n          'dynamic_search': 'True',\n          'responseType': 'arraybuffer',\n          'Content-Type': \"application/octet-stream\",\n          'Content-Disposition': \"attachment;filename=result.zip\"\n        }\n      }).then(resp => {\n        FileDownload(resp.data, 'result.zip');\n        callback('ФАЙЛ УСПЕШНО СКАЧАН');\n      }).catch(err => callback(err));\n    }\n};","map":{"version":3,"sources":["/Users/damir/Desktop/own/polas/maldet-frontend/src/requests/index.js"],"names":["axios","FileDownload","require","baseUrl","searchData","data","callback","search_mode","url","input_data","method","headers","then","resp","json","catch","err"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,MAAMC,OAAO,GAAG,qBAAhB;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;AAChD,QAAMC,WAAW,GAAGF,IAAI,CAACE,WAAzB;AAEA,QAAMC,GAAG,GAAGD,WAAW,KAAK,MAAhB,IAA0BA,WAAW,KAAK,gBAA1C,GACNJ,OAAO,GAAG,UAAV,GAAuBE,IAAI,CAACI,UADtB,GAENN,OAAO,GAAG,UAAV,GAAuBE,IAAI,CAACE,WAFlC;;AAIA,MAAIA,WAAW,KAAK,MAApB,EAA4B;AACxBP,IAAAA,KAAK,CAACQ,GAAD,EAAM;AACPE,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACL,0BAAkB;AADb;AAFF,KAAN,CAAL,CAMKC,IANL,CAMUC,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACC,IAAL,EAAD,CAN1B,EAOKC,KAPL,CAOWC,GAAG,IAAIV,QAAQ,CAACU,GAAD,CAP1B;AAQH,GATD,MAWK,IAAIT,WAAW,KAAK,MAApB,EAA4B;AAC7BP,IAAAA,KAAK,CAACQ,GAAD,EAAM;AACPE,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACL,0BAAkB,EADb;AAEL,gBAAQN,IAAI,CAACI;AAFR;AAFF,KAAN,CAAL,CAOKG,IAPL,CAOUC,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACC,IAAL,EAAD,CAP1B,EAQKC,KARL,CAQWC,GAAG,IAAIV,QAAQ,CAACU,GAAD,CAR1B;AASH,GAVI,MAYA,IAAIT,WAAW,KAAK,WAApB,EAAiC;AAClCP,IAAAA,KAAK,CAACQ,GAAD,EAAM;AACPE,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,OAAO,EAAE;AACL,0BAAkB,EADb;AAEL,qBAAa;AAFR;AAFF,KAAN,CAAL,CAOKC,IAPL,CAOUC,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACC,IAAL,EAAD,CAP1B,EAQKC,KARL,CAQWC,GAAG,IAAIV,QAAQ,CAACU,GAAD,CAR1B;AASH,GAVI,CAYL;AAZK,OAaA,IAAIT,WAAW,KAAK,gBAApB,EAAsC;AACvCP,MAAAA,KAAK,CAACQ,GAAD,EAAM;AACPE,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,OAAO,EAAE;AACL,4BAAkB,MADb;AAEL,0BAAgB,aAFX;AAGL,0BAAgB,0BAHX;AAIL,iCAAuB;AAJlB;AAFF,OAAN,CAAL,CASKC,IATL,CASUC,IAAI,IAAI;AACVZ,QAAAA,YAAY,CAACY,IAAI,CAACR,IAAN,EAAY,YAAZ,CAAZ;AACAC,QAAAA,QAAQ,CAAC,qBAAD,CAAR;AACH,OAZL,EAaKS,KAbL,CAaWC,GAAG,IAAIV,QAAQ,CAACU,GAAD,CAb1B;AAcH;AACJ,CA3DM","sourcesContent":["import * as axios from 'axios';\n\nconst FileDownload = require('js-file-download');\n\nconst baseUrl = 'http://0.0.0.0:8003';\n\nexport const searchData = async (data, callback) => {\n    const search_mode = data.search_mode;\n\n    const url = search_mode === 'hash' || search_mode === 'dynamic_search'\n        ? baseUrl + '/search/' + data.input_data\n        : baseUrl + '/search/' + data.search_mode;\n\n    if (search_mode === 'hash') {\n        axios(url, {\n            method: 'GET',\n            headers: {\n                'dynamic_search': ''\n            }\n        })\n            .then(resp => callback(resp.json()))\n            .catch(err => callback(err))\n    }\n\n    else if (search_mode === 'date') {\n        axios(url, {\n            method: 'GET',\n            headers: {\n                'dynamic_search': '',\n                \"date\": data.input_data\n            }\n        })\n            .then(resp => callback(resp.json()))\n            .catch(err => callback(err));\n    }\n\n    else if (search_mode === 'search_ip') {\n        axios(url, {\n            method: 'GET',\n            headers: {\n                'dynamic_search': '',\n                'search_ip': ''\n            }\n        })\n            .then(resp => callback(resp.json()))\n            .catch(err => callback(err));\n    }\n\n    // done\n    else if (search_mode === 'dynamic_search') {\n        axios(url, {\n            method: 'GET',\n            headers: {\n                'dynamic_search': 'True',\n                'responseType': 'arraybuffer',\n                'Content-Type': \"application/octet-stream\",\n                'Content-Disposition': \"attachment;filename=result.zip\"\n            }\n        })\n            .then(resp => {\n                FileDownload(resp.data, 'result.zip');\n                callback('ФАЙЛ УСПЕШНО СКАЧАН');\n            })\n            .catch(err => callback(err));\n    }\n};"]},"metadata":{},"sourceType":"module"}