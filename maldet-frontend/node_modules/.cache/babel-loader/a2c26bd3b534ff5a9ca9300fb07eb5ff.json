{"ast":null,"code":"var _jsxFileName = \"/Users/damir/Desktop/own/polas/maldet-frontend/src/pages/SearchPage.jsx\";\nimport React from 'react';\nimport './Pages.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      fetchedData: undefined\n    };\n\n    this.onSearchInputChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.onSearchButtonClick = e => {\n      e.preventDefault();\n      this.setState({\n        fetchedData: jsonExample\n      });\n    };\n\n    this.onModeChange = e => {\n      console.log(e.target.value);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__input-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'text',\n          placeholder: 'Введите текст для поиска: ...',\n          className: 'search__input',\n          onChange: this.onSearchInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSearchButtonClick,\n          className: \"search__input-btn\",\n          children: \"\\u041D\\u0430\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        \"aria-label\": \"Mode 1\",\n        value: \"mode1\",\n        onChange: this.onModeChange,\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), \" Dynamic search\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"mode2\",\n        onChange: this.onModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search__body\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: this.state.fetchedData && JSON.stringify(this.state.fetchedData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default SearchPage;\nconst jsonExample = {\n  \"glossary\": {\n    \"title\": \"example glossary\",\n    \"GlossDiv\": {\n      \"title\": \"S\",\n      \"GlossList\": {\n        \"GlossEntry\": {\n          \"ID\": \"SGML\",\n          \"SortAs\": \"SGML\",\n          \"GlossTerm\": \"Standard Generalized Markup Language\",\n          \"Acronym\": \"SGML\",\n          \"Abbrev\": \"ISO 8879:1986\",\n          \"GlossDef\": {\n            \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\n            \"GlossSeeAlso\": [\"GML\", \"XML\"]\n          },\n          \"GlossSee\": \"markup\"\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/damir/Desktop/own/polas/maldet-frontend/src/pages/SearchPage.jsx"],"names":["React","SearchPage","Component","state","input","fetchedData","undefined","onSearchInputChange","e","setState","target","value","onSearchButtonClick","preventDefault","jsonExample","onModeChange","console","log","render","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;;;AAGA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAEC;AAFT,KAD6B;;AAAA,SAMrCC,mBANqC,GAMdC,CAAD,IAAO;AACzB,WAAKC,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASC;AADN,OAAd;AAGH,KAVoC;;AAAA,SAYrCC,mBAZqC,GAYdJ,CAAD,IAAO;AACzBA,MAAAA,CAAC,CAACK,cAAF;AAIA,WAAKJ,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAES;AADH,OAAd;AAGH,KApBoC;;AAAA,SAsBrCC,YAtBqC,GAsBrBP,CAAD,IAAO;AAClBQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACE,MAAF,CAASC,KAArB;AACH,KAxBoC;AAAA;;AA0BrCO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAE,MADV;AAEI,UAAA,WAAW,EAAE,+BAFjB;AAGI,UAAA,SAAS,EAAE,eAHf;AAII,UAAA,QAAQ,EAAE,KAAKX;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AACI,UAAA,OAAO,EAAE,KAAKK,mBADlB;AAEI,UAAA,SAAS,EAAC,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,sBAAW,QAFf;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,QAAQ,EAAE,KAAKG,YAJnB;AAKI,QAAA,cAAc,EAAE;AALpB;AAAA;AAAA;AAAA;AAAA,cAhBJ,kCAwBI;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,KAAK,EAAC,OAFV;AAGI,QAAA,QAAQ,EAAE,KAAKA;AAHnB;AAAA;AAAA;AAAA;AAAA,cAxBJ,eA8BI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAA,oBACK,KAAKZ,KAAL,CAAWE,WAAX,IAA0Bc,IAAI,CAACC,SAAL,CAAe,KAAKjB,KAAL,CAAWE,WAA1B,EAAuC,IAAvC,EAA6C,CAA7C;AAD/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AAjEoC;;AAkExC;AAED,eAAeJ,UAAf;AAIA,MAAMa,WAAW,GAAG;AAChB,cAAY;AACR,aAAS,kBADD;AAER,gBAAY;AACR,eAAS,GADD;AAER,mBAAa;AACT,sBAAc;AACV,gBAAM,MADI;AAEV,oBAAU,MAFA;AAGV,uBAAa,sCAHH;AAIV,qBAAW,MAJD;AAKV,oBAAU,eALA;AAMV,sBAAY;AACR,oBAAQ,0EADA;AAER,4BAAgB,CAAC,KAAD,EAAQ,KAAR;AAFR,WANF;AAUV,sBAAY;AAVF;AADL;AAFL;AAFJ;AADI,CAApB","sourcesContent":["import React from 'react';\n\nimport './Pages.scss';\n\n\nclass SearchPage extends React.Component {\n    state = {\n        input: '',\n        fetchedData: undefined\n    };\n\n    onSearchInputChange = (e) => {\n        this.setState({\n            input: e.target.value\n        });\n    };\n\n    onSearchButtonClick = (e) => {\n        e.preventDefault();\n\n        \n\n        this.setState({\n            fetchedData: jsonExample\n        });\n    };\n\n    onModeChange = (e) => {\n        console.log(e.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"search\">\n                <div className=\"search__input-block\">\n                    <input\n                        type={'text'}\n                        placeholder={'Введите текст для поиска: ...'}\n                        className={'search__input'}\n                        onChange={this.onSearchInputChange}\n                    />\n                    <button\n                        onClick={this.onSearchButtonClick}\n                        className=\"search__input-btn\"\n                    >\n                        Найти\n                    </button>\n                </div>\n\n                <input\n                    type=\"radio\"\n                    aria-label='Mode 1'\n                    value='mode1'\n                    onChange={this.onModeChange}\n                    defaultChecked={true}\n                /> Dynamic search\n\n                <input\n                    type=\"radio\"\n                    value='mode2'\n                    onChange={this.onModeChange}\n                />\n\n                <div className=\"search__body\">\n                    <pre>\n                        {this.state.fetchedData && JSON.stringify(this.state.fetchedData, null, 2)}\n                    </pre>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default SearchPage;\n\n\n\nconst jsonExample = {\n    \"glossary\": {\n        \"title\": \"example glossary\",\n        \"GlossDiv\": {\n            \"title\": \"S\",\n            \"GlossList\": {\n                \"GlossEntry\": {\n                    \"ID\": \"SGML\",\n                    \"SortAs\": \"SGML\",\n                    \"GlossTerm\": \"Standard Generalized Markup Language\",\n                    \"Acronym\": \"SGML\",\n                    \"Abbrev\": \"ISO 8879:1986\",\n                    \"GlossDef\": {\n                        \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\n                        \"GlossSeeAlso\": [\"GML\", \"XML\"]\n                    },\n                    \"GlossSee\": \"markup\"\n                }\n            }\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}